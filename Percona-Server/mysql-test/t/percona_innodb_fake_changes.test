--source include/have_innodb_plugin.inc

--disable_warnings
DROP TABLE IF EXISTS t1, t2, t3;
--enable_warnings


--echo # Checking variables
SHOW VARIABLES LIKE 'innodb_fake_changes';
SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_VARIABLES WHERE VARIABLE_NAME='innodb_fake_changes';
SET innodb_fake_changes=1;
SHOW VARIABLES LIKE 'innodb_fake_changes';
SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_VARIABLES WHERE VARIABLE_NAME='innodb_fake_changes';
SET innodb_fake_changes=default;
SHOW VARIABLES LIKE 'innodb_fake_changes';
SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_VARIABLES WHERE VARIABLE_NAME='innodb_fake_changes';

--echo # Explicit COMMIT should fail when innodb_fake_changes is enabled
--echo # DML should be fine
CREATE TABLE t1 (a INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
let $t1_checksum_1= `CHECKSUM TABLE t1 EXTENDED`;
SET autocommit=0;
SET innodb_fake_changes=1;
BEGIN;
INSERT INTO t1 VALUES (2);
UPDATE t1 SET a=0;
DELETE FROM t1 LIMIT 1;
SELECT * FROM t1;
--error 1180
COMMIT;
SET innodb_fake_changes=default;
--echo # Verify that the fake changes to t1 did not leak through
CHECK TABLE t1;
let $t1_checksum_2= `CHECKSUM TABLE t1 EXTENDED`;
--disable_query_log
eval SELECT "$t1_checksum_1" LIKE "$t1_checksum_2" AS should_be_1;
--enable_query_log
DROP TABLE t1;

--echo # DDL must result in error
CREATE TABLE t1 (a INT) ENGINE=InnoDB;
SET autocommit=0;
SET innodb_fake_changes=1;
BEGIN;
--error 1005
CREATE TABLE t2 (a INT) ENGINE=InnoDB;
--error 1051
DROP TABLE t1;
--error 1180
TRUNCATE TABLE t1;
--error 1180
ALTER TABLE t1 ENGINE=MyISAM;
ROLLBACK;

# Test for bug 890404: uninitialized value warning in btr_cur_pessimistic_update
SET innodb_fake_changes=0;
CREATE TABLE t3 (a INT primary key, b text) ENGINE=InnoDB;
INSERT INTO t3 VALUES (1,'');
COMMIT;
let $t3_checksum_1= `CHECKSUM TABLE t3 EXTENDED`;
SET innodb_fake_changes=1;

UPDATE t3 set b=lpad('b',11000,'c') where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

SET innodb_fake_changes=default;
--echo # Verify that the fake changes to t3 did not leak through
CHECK TABLE t3;
let $t3_checksum_2= `CHECKSUM TABLE t3 EXTENDED`;
--disable_query_log
eval SELECT "$t3_checksum_1" LIKE "$t3_checksum_2" AS should_be_1;
--enable_query_log
DROP TABLE t1, t3;
